{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/components/Video.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport GetData from \"../service/connector/youtube\";\n\nvar Video = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var content, video;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            content = _ref.content;\n            _context.next = 3;\n            return GetData('spacex');\n\n          case 3:\n            video = _context.sent;\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 5,\n                columnNumber: 12\n              }\n            }, content));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function Video(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/components/Video.js"],"names":["GetData","Video","content","video"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,8BAApB;;AAEA,IAAMC,KAAK;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,OAAR,QAAQA,OAAR;AAAA;AAAA,mBACUF,OAAO,CAAC,QAAD,CADjB;;AAAA;AACJG,YAAAA,KADI;AAAA,6CAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMD,OAAN,CAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALD,KAAK;AAAA;AAAA;AAAA,GAAX;;KAAMA,K;AAMN,eAAeA,KAAf","sourcesContent":["import GetData from \"../service/connector/youtube\"\n\nconst Video = async ({content}) => {\n    const video = await GetData('spacex')\n    return <div>{content}</div>\n\n}\n\nexport default Video\n"]},"metadata":{},"sourceType":"module"}