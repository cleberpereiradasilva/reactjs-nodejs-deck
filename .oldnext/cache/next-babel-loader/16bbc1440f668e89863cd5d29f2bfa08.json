{"ast":null,"code":"import cheerio from 'cheerio';\nimport { GetChannelJson, GetVideoJson } from \"../connector/vimeo.connector\";\n\nconst _liConverterToJson = body => {\n  const $ = cheerio.load(body);\n  const items = $('li').toArray();\n  const json = [];\n  items.map(item => {\n    json.push({\n      videoId: $(item).attr('id').replace(\"clip\", \"\"),\n      thumbnail: \"\",\n      title: \"\",\n      publishedTimeText: $(item).find('.meta .time').text().trim(),\n      viewCountText: $(item).find(\".meta .plays\").text()\n    });\n    console.log($(item).find(\".meta .plays\").html());\n    console.log('----');\n  });\n  return json;\n}; //list && list.reduce( (acc, item) => {\n//           acc.concat([\n//               {url: item.find('#info')}\n//           ]);\n//        },[]);\n\n\nconst getVideo = gridVideoRenderer => ({\n  \"videoId\": gridVideoRenderer.videoId,\n  \"thumbnail\": gridVideoRenderer.thumbnail.thumbnails,\n  \"title\": gridVideoRenderer.title.simpleText,\n  \"publishedTimeText\": gridVideoRenderer.publishedTimeText.simpleText,\n  \"viewCountText\": gridVideoRenderer.viewCountText.simpleText\n});\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs);\n  const ol = $('#clips');\n\n  const json = _liConverterToJson(ol.html()); //li.find('li').map(item => console.log('xx'));\n\n\n  return json;\n};\n\nexport { GetDataChannel, GetVideoJson as GetVideo };","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/services/vimeo/facade/vimeo.facade.ts"],"names":["cheerio","GetChannelJson","GetVideoJson","_liConverterToJson","body","$","load","items","toArray","json","map","item","push","videoId","attr","replace","thumbnail","title","publishedTimeText","find","text","trim","viewCountText","console","log","html","getVideo","gridVideoRenderer","thumbnails","simpleText","GetDataChannel","channel","tabs","ol","GetVideo"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,8BAA3C;;AAEA,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAC/B,QAAMC,CAAC,GAAGL,OAAO,CAACM,IAAR,CAAaF,IAAb,CAAV;AACA,QAAMG,KAAK,GAAGF,CAAC,CAAC,IAAD,CAAD,CAAQG,OAAR,EAAd;AACA,QAAMC,IAAI,GAAG,EAAb;AAEAF,EAAAA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACdF,IAAAA,IAAI,CAACG,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAER,CAAC,CAACM,IAAD,CAAD,CAAQG,IAAR,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,MAA3B,EAAkC,EAAlC,CADH;AAENC,MAAAA,SAAS,EAAG,EAFN;AAGNC,MAAAA,KAAK,EAAG,EAHF;AAINC,MAAAA,iBAAiB,EAAGb,CAAC,CAACM,IAAD,CAAD,CAAQQ,IAAR,CAAa,aAAb,EAA4BC,IAA5B,GAAmCC,IAAnC,EAJd;AAKNC,MAAAA,aAAa,EAAGjB,CAAC,CAACM,IAAD,CAAD,CAAQQ,IAAR,CAAa,cAAb,EAA6BC,IAA7B;AALV,KAAV;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAC,CAACM,IAAD,CAAD,CAAQQ,IAAR,CAAa,cAAb,EAA6BM,IAA7B,EAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAVD;AAYA,SAAOf,IAAP;AACH,CAlBD,C,CAoBI;AACA;AACA;AACA;AACA;;;AAEJ,MAAMiB,QAAQ,GAAGC,iBAAiB,KAAK;AAC7B,aAAYA,iBAAiB,CAACd,OADD;AAE7B,eAAcc,iBAAiB,CAACX,SAAlB,CAA4BY,UAFb;AAG7B,WAAUD,iBAAiB,CAACV,KAAlB,CAAwBY,UAHL;AAI7B,uBAAsBF,iBAAiB,CAACT,iBAAlB,CAAoCW,UAJ7B;AAK7B,mBAAkBF,iBAAiB,CAACL,aAAlB,CAAgCO;AALrB,CAAL,CAAlC;;AASA,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AACtC,QAAMC,IAAI,GAAG,MAAM/B,cAAc,CAAC8B,OAAD,CAAjC;AACA,QAAM1B,CAAC,GAAGL,OAAO,CAACM,IAAR,CAAa0B,IAAb,CAAV;AACA,QAAMC,EAAE,GAAG5B,CAAC,CAAC,QAAD,CAAZ;;AACA,QAAMI,IAAI,GAAGN,kBAAkB,CAAC8B,EAAE,CAACR,IAAH,EAAD,CAA/B,CAJsC,CAKtC;;;AACA,SAAOhB,IAAP;AACD,CAPD;;AAQA,SAASqB,cAAT,EAAyB5B,YAAY,IAAIgC,QAAzC","sourcesContent":["import cheerio from 'cheerio'\nimport {GetChannelJson, GetVideoJson} from \"../connector/vimeo.connector\";\n\nconst _liConverterToJson = body => { \n    const $ = cheerio.load(body)\n    const items = $('li').toArray();\n    const json = []\n\n    items.map(item => {\n        json.push({\n            videoId: $(item).attr('id').replace(\"clip\",\"\"),\n            thumbnail : \"\" ,\n            title : \"\",\n            publishedTimeText : $(item).find('.meta .time').text().trim(),\n            viewCountText : $(item).find(\".meta .plays\").text()\n        })\n        console.log($(item).find(\".meta .plays\").html());\n        console.log('----')\n    })\n\n    return json;\n};\n\n    //list && list.reduce( (acc, item) => {\n    //           acc.concat([\n    //               {url: item.find('#info')}\n    //           ]);\n    //        },[]);\n\nconst getVideo = gridVideoRenderer => ({\n          \"videoId\" : gridVideoRenderer.videoId,\n          \"thumbnail\" : gridVideoRenderer.thumbnail.thumbnails,\n          \"title\" : gridVideoRenderer.title.simpleText,\n          \"publishedTimeText\" : gridVideoRenderer.publishedTimeText.simpleText,\n          \"viewCountText\" : gridVideoRenderer.viewCountText.simpleText\n      });\n\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs)\n  const ol = $('#clips');\n  const json = _liConverterToJson(ol.html());\n  //li.find('li').map(item => console.log('xx'));\n  return json;\n}\nexport { GetDataChannel, GetVideoJson as GetVideo };\n"]},"metadata":{},"sourceType":"module"}