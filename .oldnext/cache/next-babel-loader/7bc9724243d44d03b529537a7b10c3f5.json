{"ast":null,"code":"import { GetChannelJson } from \"../connector/youtube.connector\";\n\nconst _tabsConvertToGridRenderer = tabs => tabs && tabs.filter(tab => tab.tabRenderer && tab.tabRenderer.content)[0].tabRenderer.content.sectionListRenderer.contents[0].itemSectionRenderer.contents[0].gridRenderer.items;\n\nconst getVideo = gridVideoRenderer => ({\n  \"videoId\": gridVideoRenderer.videoId,\n  \"thumbnail\": gridVideoRenderer.thumbnail.thumbnails,\n  \"title\": gridVideoRenderer.title.simpleText,\n  \"publishedTimeText\": gridVideoRenderer.publishedTimeText.simpleText,\n  \"viewCountText\": gridVideoRenderer.viewCountText.simpleText\n});\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const items = await _tabsConvertToGridRenderer(tabs);\n  return items.reduce((acc, {\n    gridVideoRenderer\n  }) => {\n    return acc.concat([getVideo(gridVideoRenderer)]);\n  }, []);\n};\n\nexport { GetDataChannel };","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/services/youtube/facade/youtube.facade.ts"],"names":["GetChannelJson","_tabsConvertToGridRenderer","tabs","filter","tab","tabRenderer","content","sectionListRenderer","contents","itemSectionRenderer","gridRenderer","items","getVideo","gridVideoRenderer","videoId","thumbnail","thumbnails","title","simpleText","publishedTimeText","viewCountText","GetDataChannel","channel","reduce","acc","concat"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,gCAA7B;;AAEA,MAAMC,0BAA0B,GAAGC,IAAI,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,WAAJ,IAAmBD,GAAG,CAACC,WAAJ,CAAgBC,OAAtD,EAA+D,CAA/D,EACtCD,WADsC,CAEtCC,OAFsC,CAGtCC,mBAHsC,CAItCC,QAJsC,CAI7B,CAJ6B,EAKtCC,mBALsC,CAMtCD,QANsC,CAM7B,CAN6B,EAOtCE,YAPsC,CAQtCC,KARb;;AAUA,MAAMC,QAAQ,GAAGC,iBAAiB,KAAK;AAC7B,aAAYA,iBAAiB,CAACC,OADD;AAE7B,eAAcD,iBAAiB,CAACE,SAAlB,CAA4BC,UAFb;AAG7B,WAAUH,iBAAiB,CAACI,KAAlB,CAAwBC,UAHL;AAI7B,uBAAsBL,iBAAiB,CAACM,iBAAlB,CAAoCD,UAJ7B;AAK7B,mBAAkBL,iBAAiB,CAACO,aAAlB,CAAgCF;AALrB,CAAL,CAAlC;;AASA,MAAMG,cAAc,GAAG,MAAMC,OAAN,IAAiB;AACtC,QAAMpB,IAAI,GAAG,MAAMF,cAAc,CAACsB,OAAD,CAAjC;AACA,QAAMX,KAAK,GAAG,MAAMV,0BAA0B,CAACC,IAAD,CAA9C;AACA,SAAOS,KAAK,CAACY,MAAN,CAAc,CAACC,GAAD,EAAM;AAAEX,IAAAA;AAAF,GAAN,KAAgC;AACjD,WAAOW,GAAG,CAACC,MAAJ,CAAW,CAACb,QAAQ,CAACC,iBAAD,CAAT,CAAX,CAAP;AACF,GAFK,EAEJ,EAFI,CAAP;AAID,CAPD;;AAQA,SAASQ,cAAT","sourcesContent":["import {GetChannelJson} from \"../connector/youtube.connector\";\n\nconst _tabsConvertToGridRenderer = tabs => tabs && tabs.filter(tab => tab.tabRenderer && tab.tabRenderer.content)[0]\n            .tabRenderer\n            .content\n            .sectionListRenderer\n            .contents[0]\n            .itemSectionRenderer\n            .contents[0]\n            .gridRenderer\n            .items;\n\nconst getVideo = gridVideoRenderer => ({\n          \"videoId\" : gridVideoRenderer.videoId,\n          \"thumbnail\" : gridVideoRenderer.thumbnail.thumbnails,\n          \"title\" : gridVideoRenderer.title.simpleText,\n          \"publishedTimeText\" : gridVideoRenderer.publishedTimeText.simpleText,\n          \"viewCountText\" : gridVideoRenderer.viewCountText.simpleText\n      });\n\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const items = await _tabsConvertToGridRenderer(tabs);\n  return items.reduce( (acc, { gridVideoRenderer }) => {\n      return acc.concat([getVideo(gridVideoRenderer)])\n   },[])\n\n}\nexport { GetDataChannel };\n"]},"metadata":{},"sourceType":"module"}