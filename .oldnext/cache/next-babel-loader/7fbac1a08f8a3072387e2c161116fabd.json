{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/components/Video.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport GetData from \"../service/connector/youtube\";\nexport default function Video(_x) {\n  return _Video.apply(this, arguments);\n}\n_c2 = Video;\n\nfunction _Video() {\n  _Video = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var content, video;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            content = _ref.content;\n            _context.next = 3;\n            return GetData('spacex');\n\n          case 3:\n            video = _context.sent;\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 5,\n                columnNumber: 12\n              }\n            }, content));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _Video.apply(this, arguments);\n}\n\n_c = Video;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/components/Video.js"],"names":["GetData","Video","content","video"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,8BAApB;AAEA,wBAA8BC,KAA9B;AAAA;AAAA;MAA8BA,K;;;oEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,YAAAA,OAAtB,QAAsBA,OAAtB;AAAA;AAAA,mBACSF,OAAO,CAAC,QAAD,CADhB;;AAAA;AACLG,YAAAA,KADK;AAAA,6CAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMD,OAAN,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeD,K","sourcesContent":["import GetData from \"../service/connector/youtube\"\n\nexport default async function Video({content}) {\n    const video = await GetData('spacex')\n    return <div>{content}</div>\n\n}\n"]},"metadata":{},"sourceType":"module"}