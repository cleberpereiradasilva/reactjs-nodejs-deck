{"ast":null,"code":"import cheerio from 'cheerio';\nimport { GetChannelJson, GetVideoJson } from \"../connector/vimeo.connector\";\n\nconst _liConverterToJson = body => {\n  const $ = cheerio.load(body);\n  const items = $('li').toArray();\n  const json = [];\n  items.map(item => {\n    json.push({\n      videoId: $(item).attr('id').replace(\"clip\", \"\")\n    });\n    console.log($(item).find(\".meta\").html());\n    console.log('----');\n  });\n  return json;\n}; //list && list.reduce( (acc, item) => {\n//           acc.concat([\n//               {url: item.find('#info')}\n//           ]);\n//        },[]);\n\n\nconst getVideo = gridVideoRenderer => ({\n  \"videoId\": gridVideoRenderer.videoId,\n  \"thumbnail\": gridVideoRenderer.thumbnail.thumbnails,\n  \"title\": gridVideoRenderer.title.simpleText,\n  \"publishedTimeText\": gridVideoRenderer.publishedTimeText.simpleText,\n  \"viewCountText\": gridVideoRenderer.viewCountText.simpleText\n});\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs);\n  const ol = $('#clips');\n\n  const json = _liConverterToJson(ol.html()); //li.find('li').map(item => console.log('xx'));\n\n\n  return json;\n};\n\nexport { GetDataChannel, GetVideoJson as GetVideo };","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/services/vimeo/facade/vimeo.facade.ts"],"names":["cheerio","GetChannelJson","GetVideoJson","_liConverterToJson","body","$","load","items","toArray","json","map","item","push","videoId","attr","replace","console","log","find","html","getVideo","gridVideoRenderer","thumbnail","thumbnails","title","simpleText","publishedTimeText","viewCountText","GetDataChannel","channel","tabs","ol","GetVideo"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,8BAA3C;;AAEA,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAC/B,QAAMC,CAAC,GAAGL,OAAO,CAACM,IAAR,CAAaF,IAAb,CAAV;AACA,QAAMG,KAAK,GAAGF,CAAC,CAAC,IAAD,CAAD,CAAQG,OAAR,EAAd;AACA,QAAMC,IAAI,GAAG,EAAb;AACAF,EAAAA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACdF,IAAAA,IAAI,CAACG,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAER,CAAC,CAACM,IAAD,CAAD,CAAQG,IAAR,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,MAA3B,EAAkC,EAAlC;AADH,KAAV;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAC,CAACM,IAAD,CAAD,CAAQO,IAAR,CAAa,OAAb,EAAsBC,IAAtB,EAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAND;AAQA,SAAOR,IAAP;AACH,CAbD,C,CAeI;AACA;AACA;AACA;AACA;;;AAEJ,MAAMW,QAAQ,GAAGC,iBAAiB,KAAK;AAC7B,aAAYA,iBAAiB,CAACR,OADD;AAE7B,eAAcQ,iBAAiB,CAACC,SAAlB,CAA4BC,UAFb;AAG7B,WAAUF,iBAAiB,CAACG,KAAlB,CAAwBC,UAHL;AAI7B,uBAAsBJ,iBAAiB,CAACK,iBAAlB,CAAoCD,UAJ7B;AAK7B,mBAAkBJ,iBAAiB,CAACM,aAAlB,CAAgCF;AALrB,CAAL,CAAlC;;AASA,MAAMG,cAAc,GAAG,MAAMC,OAAN,IAAiB;AACtC,QAAMC,IAAI,GAAG,MAAM7B,cAAc,CAAC4B,OAAD,CAAjC;AACA,QAAMxB,CAAC,GAAGL,OAAO,CAACM,IAAR,CAAawB,IAAb,CAAV;AACA,QAAMC,EAAE,GAAG1B,CAAC,CAAC,QAAD,CAAZ;;AACA,QAAMI,IAAI,GAAGN,kBAAkB,CAAC4B,EAAE,CAACZ,IAAH,EAAD,CAA/B,CAJsC,CAKtC;;;AACA,SAAOV,IAAP;AACD,CAPD;;AAQA,SAASmB,cAAT,EAAyB1B,YAAY,IAAI8B,QAAzC","sourcesContent":["import cheerio from 'cheerio'\nimport {GetChannelJson, GetVideoJson} from \"../connector/vimeo.connector\";\n\nconst _liConverterToJson = body => { \n    const $ = cheerio.load(body)\n    const items = $('li').toArray();\n    const json = []\n    items.map(item => {\n        json.push({\n            videoId: $(item).attr('id').replace(\"clip\",\"\")\n        })\n        console.log($(item).find(\".meta\").html());\n        console.log('----')\n    })\n\n    return json;\n};\n\n    //list && list.reduce( (acc, item) => {\n    //           acc.concat([\n    //               {url: item.find('#info')}\n    //           ]);\n    //        },[]);\n\nconst getVideo = gridVideoRenderer => ({\n          \"videoId\" : gridVideoRenderer.videoId,\n          \"thumbnail\" : gridVideoRenderer.thumbnail.thumbnails,\n          \"title\" : gridVideoRenderer.title.simpleText,\n          \"publishedTimeText\" : gridVideoRenderer.publishedTimeText.simpleText,\n          \"viewCountText\" : gridVideoRenderer.viewCountText.simpleText\n      });\n\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs)\n  const ol = $('#clips');\n  const json = _liConverterToJson(ol.html());\n  //li.find('li').map(item => console.log('xx'));\n  return json;\n}\nexport { GetDataChannel, GetVideoJson as GetVideo };\n"]},"metadata":{},"sourceType":"module"}