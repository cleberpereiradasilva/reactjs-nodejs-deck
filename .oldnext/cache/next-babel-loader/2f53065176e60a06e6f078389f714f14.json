{"ast":null,"code":"import cheerio from 'cheerio';\nimport { GetChannelJson, GetVideoJson, GetStatsJson } from \"../connector/\";\n\nconst _liConverterToJson = async body => {\n  const $ = await cheerio.load(body);\n  const items = $('li').toArray();\n  return Promise.all(await items.map(async item => {\n    const videoId = $(item).attr('id').replace(\"clip\", \"\");\n    const videoBody = await GetVideoJson(videoId);\n    const statsJson = await GetStatsJson(videoId);\n    console.log(statsJson);\n    return await getVideo(videoBody);\n  }));\n};\n\nconst getVideo = async videoBody => {\n  const initScript = videoBody.split('<script type=\"application/ld+json\">')[1];\n  const data = initScript.split('</script>')[0].trim();\n  const json = JSON.parse(data)[0];\n  const videoId = json.url.split('/').pop();\n  const videoJson = {\n    videoId,\n    \"thumbnail\": [json.thumbnailUrl],\n    \"title\": json.name,\n    \"description\": json.description,\n    \"publishedTimeText\": json.uploadDate,\n    \"viewCountText\": \"\"\n  };\n  return videoJson;\n};\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs);\n  const ol = $('#clips');\n  const json = await _liConverterToJson(ol.html());\n  return json;\n};\n\nexport { GetDataChannel, GetVideoJson as GetVideo };","map":{"version":3,"sources":["/home/noct/Trabalho/my-git/reactjs-nodejs-deck/src/services/vimeo/facade/vimeo.facade.ts"],"names":["cheerio","GetChannelJson","GetVideoJson","GetStatsJson","_liConverterToJson","body","$","load","items","toArray","Promise","all","map","item","videoId","attr","replace","videoBody","statsJson","console","log","getVideo","initScript","split","data","trim","json","JSON","parse","url","pop","videoJson","thumbnailUrl","name","description","uploadDate","GetDataChannel","channel","tabs","ol","html","GetVideo"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,YAAtC,QAAyD,eAAzD;;AAEA,MAAMC,kBAAkB,GAAG,MAAMC,IAAN,IAAc;AACrC,QAAMC,CAAC,GAAG,MAAMN,OAAO,CAACO,IAAR,CAAaF,IAAb,CAAhB;AACA,QAAMG,KAAK,GAAGF,CAAC,CAAC,IAAD,CAAD,CAAQG,OAAR,EAAd;AACA,SAAOC,OAAO,CAACC,GAAR,CAAY,MAAMH,KAAK,CAACI,GAAN,CAAU,MAAMC,IAAN,IAAc;AAC7C,UAAMC,OAAO,GAAGR,CAAC,CAACO,IAAD,CAAD,CAAQE,IAAR,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,MAA3B,EAAkC,EAAlC,CAAhB;AACA,UAAMC,SAAS,GAAG,MAAMf,YAAY,CAACY,OAAD,CAApC;AACA,UAAMI,SAAS,GAAG,MAAMf,YAAY,CAACW,OAAD,CAApC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAO,MAAMG,QAAQ,CAACJ,SAAD,CAArB;AACH,GANwB,CAAlB,CAAP;AASH,CAZD;;AAeA,MAAMI,QAAQ,GAAG,MAAMJ,SAAN,IAAmB;AAChC,QAAMK,UAAU,GAAGL,SAAS,CAACM,KAAV,CAAgB,qCAAhB,EAAuD,CAAvD,CAAnB;AACA,QAAMC,IAAI,GAAGF,UAAU,CAACC,KAAX,CAAiB,WAAjB,EAA8B,CAA9B,EAAiCE,IAAjC,EAAb;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiB,CAAjB,CAAb;AACA,QAAMV,OAAO,GAAGY,IAAI,CAACG,GAAL,CAASN,KAAT,CAAe,GAAf,EAAoBO,GAApB,EAAhB;AACA,QAAMC,SAAS,GAAG;AACZjB,IAAAA,OADY;AAEZ,iBAAc,CAACY,IAAI,CAACM,YAAN,CAFF;AAGZ,aAAUN,IAAI,CAACO,IAHH;AAIZ,mBAAgBP,IAAI,CAACQ,WAJT;AAKZ,yBAAsBR,IAAI,CAACS,UALf;AAMZ,qBAAkB;AANN,GAAlB;AAQA,SAAOJ,SAAP;AACH,CAdD;;AAiBA,MAAMK,cAAc,GAAG,MAAMC,OAAN,IAAiB;AACtC,QAAMC,IAAI,GAAG,MAAMrC,cAAc,CAACoC,OAAD,CAAjC;AACA,QAAM/B,CAAC,GAAGN,OAAO,CAACO,IAAR,CAAa+B,IAAb,CAAV;AACA,QAAMC,EAAE,GAAGjC,CAAC,CAAC,QAAD,CAAZ;AACA,QAAMoB,IAAI,GAAG,MAAMtB,kBAAkB,CAACmC,EAAE,CAACC,IAAH,EAAD,CAArC;AACA,SAAOd,IAAP;AACD,CAND;;AAOA,SAASU,cAAT,EAAyBlC,YAAY,IAAIuC,QAAzC","sourcesContent":["import cheerio from 'cheerio'\nimport {GetChannelJson, GetVideoJson, GetStatsJson} from \"../connector/\";\n\nconst _liConverterToJson = async body => { \n    const $ = await cheerio.load(body)\n    const items = $('li').toArray();\n    return Promise.all(await items.map(async item => {\n        const videoId = $(item).attr('id').replace(\"clip\",\"\");\n        const videoBody = await GetVideoJson(videoId);\n        const statsJson = await GetStatsJson(videoId);\n        console.log(statsJson);\n        return await getVideo(videoBody);\n    }));\n\n\n};\n\n\nconst getVideo = async videoBody => {\n    const initScript = videoBody.split('<script type=\"application/ld+json\">')[1];\n    const data = initScript.split('</script>')[0].trim();\n    const json = JSON.parse(data)[0];\n    const videoId = json.url.split('/').pop();\n    const videoJson = {\n          videoId,\n          \"thumbnail\" : [json.thumbnailUrl],\n          \"title\" : json.name,\n          \"description\" : json.description,\n          \"publishedTimeText\" : json.uploadDate,\n          \"viewCountText\" : \"\",\n    }\n    return videoJson;\n};\n\n\nconst GetDataChannel = async channel => {\n  const tabs = await GetChannelJson(channel);\n  const $ = cheerio.load(tabs)\n  const ol = $('#clips');\n  const json = await _liConverterToJson(ol.html());\n  return json;\n}\nexport { GetDataChannel, GetVideoJson as GetVideo };\n"]},"metadata":{},"sourceType":"module"}